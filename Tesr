  columns = ['Order Event', 'Fix_Col_0', 'FirmROID', 'MsgType', 'CAT_IM_ID',
                   'Date', 'Order ID', 'Symbol', 'TimeStamp', 'Fix_Col_1', 'Fix_Col_2', 'Fix_Col_3', 'Fix_Col_4',
                   'Fix_Col_5', 'Fix_Col_6', 'Fix_Col_7', 'Fix_Col_8', 'SideType', 'Price', 'Quantity', 'Fix_Col_9',
                   'OrderType', 'TIF', 'Trading_Session', 'Fix_Col_10', 'Fix_Col_11', 'FDID', 'Acc Type', 'Fix_Col_12',
                   'Fix_Col_13', 'Fix_Col_14', 'Fix_Col_15', 'Fix_Col_16', 'Fix_Col_17', 'Fix_Col_18', 'Fix_Col_19',
                   'Fix_Col_20', 'Fix_Col_21', 'Fix_Col_22', 'Fix_Col_23', 'Fix_Col_24', 'Fix_Col_25', 'Fix_Col_26',
                   'Fix_Col_27', 'Fix_Col_28', 'Fix_Col_29']

the output i'm getting
data_frame_one = NEW,,20240513_CAT-VCVW-1,MENO,VCVW,20240513T000000.00000000,CAT-VCVW-OrderID-1,REGCO,20240513T160000.517000000,False,False,,,,T,False,,B,,100,,MKT,GTX=20240513,ALL,,False,4540540244050736652713500211690321808548,A,False,,,False,N,,,,,,,,,,,,,

data_frame_two = NEW,,20240513_CAT-VCVW-42,MEOR,VCVW,20240513T000000.00000000,CAT-VCVW-OrderID-1,REGCO,20240513T160000.517000000,,False,False,,126588:VCVW,104138:SPDR,F,VCTY-TAK2-327144,B,,100,,MKT,GTX=20240513,ALL,False,NA,,False,False,,False,,,,,,,,,,,,,,,


the output i want
data_frame_one = NEW,,20240513_CAT-VCVW-1,MENO,VCVW,20240513T000000.00000000,CAT-VCVW-OrderID-1,REGCO,20240513T160000.517000000,False,False,,,,T,False,,B,,100,,MKT,GTX=20240513,ALL,,False,4540540244050736652713500211690321808548,A,False,,,False,N,,,,,,,,,,,,,
data_frame_two = NEW,,20240513_CAT-VCVW-42,MEOR,VCVW,20240513T000000.00000000,CAT-VCVW-OrderID-1,REGCO,20240513T160000.517000000,,False,False,,126588:VCVW,104138:SPDR,F,VCTY-TAK2-327144,B,,100,,MKT,GTX=20240513,ALL,False,NA,,False,False,,False,,,,,
To get the output in the desired format, ensure that each line is printed separately. It looks like the provided columns and data entries are already aligned, but the issue is with printing the outputs correctly. Here is how you can format the output:

1. **Define the columns**: These should match the ones you've listed.
2. **Create the data frames**: Make sure the data aligns with the columns.
3. **Print each data frame separately**: This ensures clarity.

Here's a script that does this:

```python
columns = ['Order Event', 'Fix_Col_0', 'FirmROID', 'MsgType', 'CAT_IM_ID',
           'Date', 'Order ID', 'Symbol', 'TimeStamp', 'Fix_Col_1', 'Fix_Col_2', 'Fix_Col_3', 'Fix_Col_4',
           'Fix_Col_5', 'Fix_Col_6', 'Fix_Col_7', 'Fix_Col_8', 'SideType', 'Price', 'Quantity', 'Fix_Col_9',
           'OrderType', 'TIF', 'Trading_Session', 'Fix_Col_10', 'Fix_Col_11', 'FDID', 'Acc Type', 'Fix_Col_12',
           'Fix_Col_13', 'Fix_Col_14', 'Fix_Col_15', 'Fix_Col_16', 'Fix_Col_17', 'Fix_Col_18', 'Fix_Col_19',
           'Fix_Col_20', 'Fix_Col_21', 'Fix_Col_22', 'Fix_Col_23', 'Fix_Col_24', 'Fix_Col_25', 'Fix_Col_26',
           'Fix_Col_27', 'Fix_Col_28', 'Fix_Col_29']

data_frame_one = ["NEW", "", "20240513_CAT-VCVW-1", "MENO", "VCVW", "20240513T000000.00000000",
                  "CAT-VCVW-OrderID-1", "REGCO", "20240513T160000.517000000", "False", "False", "", "", "", "T", 
                  "False", "", "B", "", "100", "", "MKT", "GTX=20240513", "ALL", "", "False", 
                  "4540540244050736652713500211690321808548", "A", "False", "", "", "False", "N", "", "", "", "", "", "", "", "", "", "", ""]

data_frame_two = ["NEW", "", "20240513_CAT-VCVW-42", "MEOR", "VCVW", "20240513T000000.00000000", 
                  "CAT-VCVW-OrderID-1", "REGCO", "20240513T160000.517000000", "", "False", "False", "", 
                  "126588:VCVW", "104138:SPDR", "F", "VCTY-TAK2-327144", "B", "", "100", "", "MKT", "GTX=20240513", 
                  "ALL", "False", "NA", "", "False", "False", "", "False", "", "", "", "", "", "", "", "", "", "", "", ""]

# Function to print data frames
def print_data_frame(data_frame):
    print(",".join(data_frame))

print("data_frame_one = ", end="")
print_data_frame(data_frame_one)

print("data_frame_two = ", end="")
print_data_frame(data_frame_two)
```

When you run this script, it will print each data frame separately, ensuring they are easy to read and correctly formatted. If the actual data comes from a different source (e.g., a CSV file or a database), you may need to adapt the data extraction part accordingly.
